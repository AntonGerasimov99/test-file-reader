Пример текста.
#Принципы ООП в Java
Как упоминалось выше, выделяют четыре основные принципа ООП:
##Абстракция.
Абстракция означает использование простых вещей для описания чего-то сложного.
Например, мы все знаем как пользоваться телевизором, но в тоже время нам не нужно обладать знаниями о том, как он работает чтобы смотреть его.
В Java под абстракцией подразумеваются такие вещи, как объекты, классы и переменные, которые в свою очередь лежат в основе более сложного кода.
Использование данного принципа позволяет избежать сложности при разработке ПО.
###Пример.
##Инкапсуляция.
Под инкапсуляцией подразумевается сокрытие полей внутри объекта с целью защиты данных от внешнего, бесконтрольного изменения со стороны других объектов.
Доступ к данным (полям) предоставляется посредством публичных методов (геттеров/сеттеров).
Это защитный барьер позволяет хранить информацию в безопасности внутри объекта.
###Пример.
##Наследование.
Это особая функциональность в объектно-ориентированных языках программирования, которая позволяет описывать новые классы на основе уже существующих.
При этом поля и методы класса-предка становятся доступны и классам-наследникам.
Данная фича делает классы более чистыми и понятным за счет устранения дублирования программного кода.
###Пример.
##Полиморфизм.
Данный принцип позволяет программистам использовать одни и те же термины для описания различного поведения, зависящего от контекста.
Одной из форм полиморфизма в Java является переопределение метода, когда различные формы поведения определяются объектом из которого данный метод был вызван.
Другой формой полиморфизма является перегрузка метода, когда его поведение определяется набором передаваемых в метод аргументов.